				;file D:\IIIT\Desktop\盛群程式\moto_test\moto_test.c
				;1	#include <HT66F70A.h>
				;2	typedef	unsigned char	u8;
				;3	typedef	char			s8;
				;4	typedef	unsigned short	u16;
				;5	typedef	short			s16;
				;6	typedef	unsigned long	u32;
				;7	typedef	long			s32;
				;8	
				;9	#define  SW_P0PU		_pepu0
				;10	#define  SW_P0			_pe0
				;11	#define  SW_P0C			_pec0
				;12	
				;13	#define	 SW_P1PU		_pepu1		
				;14	#define	 SW_P1 		    _pe1		
				;15	#define	 SW_P1C			_pec1		
				;16	
				;17	#define	 SW_P2PU		_pepu2		
				;18	#define	 SW_P2			_pe2		
				;19	#define	 SW_P2C			_pec2		
				;20	
				;21	
				;22	#define	 SW_P3PU		_pepu3		
				;23	#define	 SW_P3			_pe3		
				;24	#define	 SW_P3C			_pec3	
				;25	void Delay100us(u16);							//函式原型宣告		 
				;26	void main()
				;27	{	s16 temp,Index=100;
				@code .SECTION 'CODE'
				include HT66F70A.inc
0000	1F0B	clr     BP
0001	2802	jmp     _main_startup1
				@start .SECTION 'CODE'
				_main_startup1:
				@start .SECTION 'CODE'
0002	0F00	mov     a, 0H
0003	008B	mov     BP, a
0004	282C	jmp     _main
0045	0F64	mov     a, 64H
0046	408B	mov     _main_2, a
0047	5F0C	clr     _main_2[1]
				;28		_wdtc=0b10101111;							//關閉看們狗計時器
				_main:
				_main:
002C	0FAF	mov     a, AFH
002D	00BE	mov     WDTC, a
				;29		SW_P0C=1; SW_P0PU=1;			   	//規劃按鍵腳位為輸入屬性並啟用提升電阻
002E	3023	set     PEC0
002F	3021	set     PEPU0
				;30		SW_P1C=1; SW_P1PU=1;
0030	30A3	set     PEC1
0031	30A1	set     PEPU1
				;31		SW_P2C=1; SW_P2PU=1;
0032	3123	set     PEC2
0033	3121	set     PEPU2
				;32		SW_P3C=1; SW_P3PU=1;		   	
0034	31A3	set     PEC3
0035	31A1	set     PEPU3
				;33		_psc0=0x01; _tbc0=0x85;_tb0e=1;				//fTB=fSYS/4,週期=8192*fTB,致能TB0中斷	
0036	0F01	mov     a, 1H
0037	00E4	mov     PSC0, a
0038	0F85	mov     a, 85H
0039	00E5	mov     TBC0, a
003A	30B2	set     TB0E
				;34		_pcs2=0x01;						//設定PC3/PC4為TP2功能
003B	0F01	mov     a, 1H
003C	80EA	lmov    PCS2, a
				;35		_tm2c0=0b00000000;							//fINT=fSYS(8MHz)/4 (0.5us)
003E	1F51	clr     TM2C0
				;36		_tm2c1=0b10101000;							//PWM/Active High/TM2R控制週期
003F	0FA8	mov     a, A8H
0040	00D2	mov     TM2C1, a
				;37		_tm2rp=160;									//週期=256*160*0.5us=20.48ms
0041	0FA0	mov     a, A0H
0042	00D7	mov     TM2RP, a
				;38		_t2on=1; _emi=1;							//起始TM1計數並致能EMI
0043	31D1	set     T2ON
0044	3030	set     EMI
				;39		while(1)
				;40		{	temp=Index*20+1000;						//轉換為佔空比參數
				_L8:
0048	470B	mov     a, _main_2
0049	4085	mov     del, a
004A	470C	mov     a, _main_2[1]
004B	4086	mov     del[1], a
004C	0F14	mov     a, 14H
004D	4087	mov     del[2], a
004E	5F08	clr     del[3]
004F	2019	call    L0019
0050	4709	mov     a, del[4]
0051	4083	mov     rd, a
0052	470A	mov     a, del[5]
0053	4084	mov     re, a
0054	0FE8	mov     a, E8H
0055	4383	addm    a, rd
0056	0F03	mov     a, 3H
0057	5384	adcm    a, re
				;41			_tm2al=temp%256;						//設定佔空比參數
0058	4703	mov     a, rd
0059	4081	mov     rb, a
005A	4704	mov     a, re
005B	4082	mov     rc, a
005C	0FFF	mov     a, FFH
005D	4681	andm    a, rb
005E	0F80	mov     a, 80H
005F	4682	andm    a, rc
0060	7B82	snz     rc.7
0061	286D	jmp     _L9
0062	0FFF	mov     a, FFH
0063	4381	addm    a, rb
0064	0FFF	mov     a, FFH
0065	5382	adcm    a, rc
0066	0FFF	mov     a, FFH
0067	4582	orm     a, rc
0068	0F00	mov     a, 0H
0069	4581	orm     a, rb
006A	5481	inc     rb
006B	3D0A	sz      Z
006C	5482	inc     rc
				_L9:
006D	4701	mov     a, rb
006E	00D5	mov     TM2AL, a
				;42			_tm2ah=temp/256;					
006F	4703	mov     a, rd
0070	4081	mov     rb, a
0071	4704	mov     a, re
0072	4082	mov     rc, a
0073	7B84	snz     re.7
0074	2879	jmp     _L10
0075	0FFF	mov     a, FFH
0076	4381	addm    a, rb
0077	0F00	mov     a, 0H
0078	5382	adcm    a, rc
				_L10:
0079	4702	mov     a, rc
007A	00D6	mov     TM2AH, a
				;43			temp>>=1;								//轉換為Ton時間
				;44			Delay100us(100);						//延遲120ms
007B	0F64	mov     a, 64H
007C	4085	mov     del, a
007D	5F06	clr     del[1]
007E	2005	call    _Delay100us
				;45			while(1)
				;46			{	
				;47				if(!SW_P0)
				_L15:
007F	3822	snz     PE0
0080	289E	jmp     _L20
				;48				{
				;49					Index=0;
				;50					break;
				;51				}
				;52				if(!SW_P1)
0081	3CA2	sz      PE1
0082	2887	jmp     _L21
				;53				{
				;54					Index=90;
0083	0F5A	mov     a, 5AH
0084	408B	mov     _main_2, a
0085	5F0C	clr     _main_2[1]
0086	2848	jmp     _L8
				;55					break;
				;56				}
				;57				if(!SW_P2)
				_L21:
0087	3D22	sz      PE2
0088	2896	jmp     _L12
				;58				{
				;59					Index++;
0089	548B	inc     _main_2
008A	3D0A	sz      Z
008B	548C	inc     _main_2[1]
				;60					if(Index>=200) Index=200;
008C	0FC7	mov     a, C7H
008D	420B	sub     a, _main_2
008E	0F00	mov     a, 0H
008F	520C	sbc     a, _main_2[1]
0090	3B8A	snz     SC
0091	2848	jmp     _L8
0092	0FC8	mov     a, C8H
0093	408B	mov     _main_2, a
0094	5F0C	clr     _main_2[1]
0095	2848	jmp     _L8
				;61					break;
				;62				}
				;63				if(!SW_P3)
				_L12:
0096	3DA2	sz      PE3
0097	287F	jmp     _L15
0098	0FFF	mov     a, FFH
0099	438B	addm    a, _main_2
009A	0FFF	mov     a, FFH
009B	538C	adcm    a, _main_2[1]
009C	7B8C	snz     _main_2[1].7
009D	2848	jmp     _L8
				_L20:
009E	5F0B	clr     _main_2
009F	5F0C	clr     _main_2[1]
00A0	2848	jmp     _L8
00A1	28A1	jmp     $
				;64				{
				;65					Index--;
				;66					if(Index<=0) Index=0;
				;67					break;
				;68				}
				;69			}
				;70		}
				;71	}
				;72	void Delay100us(u16 del)						//延遲del*200指令週期
				;73	{	u16 i,j;									//@fSYS=8MH,延遲del*100us
				;74		for(i=0;i<del;i++)
				_Delay100us:
				_Delay100us:
0005	5F01	clr     rb
0006	5F02	clr     rc
				_L2:
0007	4701	mov     a, rb
0008	4205	sub     a, del[0]
0009	4702	mov     a, rc
000A	5206	sbc     a, del[1]
000B	3F0A	sz      CZ
000C	2818	jmp     _L1
000D	5F00	clr     ra
0014	5481	inc     rb
0015	3D0A	sz      Z
0016	5482	inc     rc
0017	2807	jmp     _L2
				_L1:
0018	0003	ret
				L0019:
0019	5F09	clr     del[4]
001A	5F0A	clr     del[5]
				L001B:
001B	7807	snz     del[2].0
001C	2821	jmp     L0021
001D	4705	mov     a, del[0]
001E	4389	addm    a, del[4]
001F	4706	mov     a, del[1]
0020	538A	adcm    a, del[5]
				L0021:
0021	340A	clr     C
0022	5A85	rlc     del[0]
0023	5A86	rlc     del[1]
0024	340A	clr     C
0025	5B88	rrc     del[3]
0026	5B87	rrc     del[2]
0027	4707	mov     a, del[2]
0028	4508	or      a, del[3]
0029	390A	snz     Z
002A	281B	jmp     L001B
002B	0003	ret
				;75			for(j=0;j<=25;j++) GCC_NOP();
				_L5:
000E	0000	nop
000F	5480	inc     ra
0010	4700	mov     a, ra
0011	0A1A	sub     a, 1AH
0012	390A	snz     Z
0013	280E	jmp     _L5
				;76	}
				data .SECTION 'DATA'
				__pepu DB DUP (?) ; __pepu
				__pe DB DUP (?) ; __pe
				__pec DB DUP (?) ; __pec
				__intc0 DB DUP (?) ; __intc0
				__intc2 DB DUP (?) ; __intc2
				__wdtc DB DUP (?) ; __wdtc
				__tm2c0 DB DUP (?) ; __tm2c0
				__tm2c1 DB DUP (?) ; __tm2c1
				__tm2al DB DUP (?) ; __tm2al
				__tm2ah DB DUP (?) ; __tm2ah
				__tm2rp DB DUP (?) ; __tm2rp
				__psc0 DB DUP (?) ; __psc0
				__tbc0 DB DUP (?) ; __tbc0
				ra DB DUP (?)
				rb DB DUP (?)
				rc DB DUP (?)
				rd DB DUP (?)
				re DB DUP (?)
				del DB 2 DUP (?) ; del
				_main_2 DB DUP (?)
				__pcs2 DB DUP (?) ; __pcs2
