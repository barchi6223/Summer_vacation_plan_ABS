				;file D:\IIIT\Desktop\盛群程式\Servomtot_Relay_test\Servomtot_Relay_test.c
				;1	#include <HT66F70A.h>
				;2	typedef	unsigned char	u8;
				;3	typedef	char			s8;
				;4	typedef	unsigned short	u16;
				;5	typedef	short			s16;
				;6	typedef	unsigned long	u32;
				;7	typedef	long			s32;
				;8	
				;9	//繼電器訊號腳位
				;10	#define Relay _pe4
				;11	#define Relayc _pec4
				;12	//按鈕腳位
				;13	#define  SW_P0			_pe0
				;14	#define	 SW_P1 		    _pe1
				;15	#define	 SW_P2			_pe2
				;16	#define	 SW_P3			_pe3
				;17	#define  SW_P0C			_pec0
				;18	#define	 SW_P1C			_pec1
				;19	#define	 SW_P2C			_pec2
				;20	#define	 SW_P3C			_pec3
				;21	//按鈕腳位電阻上拉
				;22	#define  SW_P0PU		_pepu0
				;23	#define	 SW_P1PU		_pepu1		
				;24	#define	 SW_P2PU		_pepu2		
				;25	#define	 SW_P3PU		_pepu3	
				;26	void Delay100us(u16);							//函式原型宣告		 
				;27	void main()
				;28	{	s16 temp,Index=100;
				@code .SECTION 'CODE'
				include HT66F70A.inc
0000	1F0B	clr     BP
0001	2802	jmp     _main_startup1
				@start .SECTION 'CODE'
				_main_startup1:
				@start .SECTION 'CODE'
0002	0F00	mov     a, 0H
0003	008B	mov     BP, a
0004	282C	jmp     _main
0047	0F64	mov     a, 64H
0048	408B	mov     _main_2, a
0049	5F0C	clr     _main_2[1]
				;29		_wdtc=0b10101111;							//關閉看們狗計時器
				_main:
				_main:
002C	0FAF	mov     a, AFH
002D	00BE	mov     WDTC, a
				;30		SW_P0C=1; SW_P0PU=1;			   	//規劃按鍵腳位為輸入屬性並啟用提升電阻
002E	3023	set     PEC0
002F	3021	set     PEPU0
				;31		SW_P1C=1; SW_P1PU=1;
0030	30A3	set     PEC1
0031	30A1	set     PEPU1
				;32		SW_P2C=1; SW_P2PU=1;
0032	3123	set     PEC2
0033	3121	set     PEPU2
				;33		SW_P3C=1; SW_P3PU=1;
0034	31A3	set     PEC3
0035	31A1	set     PEPU3
				;34		
				;35	Relay=0; Relayc=0;
0036	3622	clr     PE4
0037	3623	clr     PEC4
				;36				   	
				;37		_psc0=0x01; _tbc0=0x85;_tb0e=1;				//fTB=fSYS/4,週期=8192*fTB,致能TB0中斷	
0038	0F01	mov     a, 1H
0039	00E4	mov     PSC0, a
003A	0F85	mov     a, 85H
003B	00E5	mov     TBC0, a
003C	30B2	set     TB0E
				;38		_pcs2=0x01;						//設定PC3/PC4為TP2功能
003D	0F01	mov     a, 1H
003E	80EA	lmov    PCS2, a
				;39		_tm2c0=0b00000000;							//fINT=fSYS(8MHz)/4 (0.5us)
0040	1F51	clr     TM2C0
				;40		_tm2c1=0b10101000;							//PWM/Active High/TM2R控制週期
0041	0FA8	mov     a, A8H
0042	00D2	mov     TM2C1, a
				;41		_tm2rp=160;									//週期=256*160*0.5us=20.48ms
0043	0FA0	mov     a, A0H
0044	00D7	mov     TM2RP, a
				;42		_t2on=1; _emi=1;							//起始TM1計數並致能EMI
0045	31D1	set     T2ON
0046	3030	set     EMI
				;43		while(1)
				;44		{	
				;45			temp=Index*20+1000;						//轉換為佔空比參數
				_L8:
004A	470B	mov     a, _main_2
004B	4085	mov     del, a
004C	470C	mov     a, _main_2[1]
004D	4086	mov     del[1], a
004E	0F14	mov     a, 14H
004F	4087	mov     del[2], a
0050	5F08	clr     del[3]
0051	2019	call    L0019
0052	4709	mov     a, del[4]
0053	4083	mov     rd, a
0054	470A	mov     a, del[5]
0055	4084	mov     re, a
0056	0FE8	mov     a, E8H
0057	4383	addm    a, rd
0058	0F03	mov     a, 3H
0059	5384	adcm    a, re
				;46			_tm2al=temp%256;						//設定佔空比參數
005A	4703	mov     a, rd
005B	4081	mov     rb, a
005C	4704	mov     a, re
005D	4082	mov     rc, a
005E	0FFF	mov     a, FFH
005F	4681	andm    a, rb
0060	0F80	mov     a, 80H
0061	4682	andm    a, rc
0062	7B82	snz     rc.7
0063	286F	jmp     _L9
0064	0FFF	mov     a, FFH
0065	4381	addm    a, rb
0066	0FFF	mov     a, FFH
0067	5382	adcm    a, rc
0068	0FFF	mov     a, FFH
0069	4582	orm     a, rc
006A	0F00	mov     a, 0H
006B	4581	orm     a, rb
006C	5481	inc     rb
006D	3D0A	sz      Z
006E	5482	inc     rc
				_L9:
006F	4701	mov     a, rb
0070	00D5	mov     TM2AL, a
				;47			_tm2ah=temp/256;					
0071	4703	mov     a, rd
0072	4081	mov     rb, a
0073	4704	mov     a, re
0074	4082	mov     rc, a
0075	7B84	snz     re.7
0076	287B	jmp     _L10
0077	0FFF	mov     a, FFH
0078	4381	addm    a, rb
0079	0F00	mov     a, 0H
007A	5382	adcm    a, rc
				_L10:
007B	4702	mov     a, rc
007C	00D6	mov     TM2AH, a
				;48			temp>>=1;								//轉換為Ton時間
				;49			Delay100us(100);						//延遲120ms
007D	0F64	mov     a, 64H
007E	4085	mov     del, a
007F	5F06	clr     del[1]
0080	2005	call    _Delay100us
				;50			
				;51			while(1)
				;52			{	
				;53				if(!SW_P0)
				_L11:
0081	3822	snz     PE0
0082	28A0	jmp     _L22
				;54				{
				;55					Index=0;
				;56					break;
				;57				}
				;58				if(!SW_P1)
0083	3CA2	sz      PE1
0084	2889	jmp     _L23
				;59				{
				;60					Index=90;
0085	0F5A	mov     a, 5AH
0086	408B	mov     _main_2, a
0087	5F0C	clr     _main_2[1]
0088	284A	jmp     _L8
				;61					break;
				;62				}
				;63				if(!SW_P2)
				_L23:
0089	3D22	sz      PE2
008A	2898	jmp     _L13
				;64				{
				;65					Index++;
008B	548B	inc     _main_2
008C	3D0A	sz      Z
008D	548C	inc     _main_2[1]
				;66					if(Index>=200) Index=200;
008E	0FC7	mov     a, C7H
008F	420B	sub     a, _main_2
0090	0F00	mov     a, 0H
0091	520C	sbc     a, _main_2[1]
0092	3B8A	snz     SC
0093	284A	jmp     _L8
0094	0FC8	mov     a, C8H
0095	408B	mov     _main_2, a
0096	5F0C	clr     _main_2[1]
0097	284A	jmp     _L8
				;67					break;
				;68				}
				;69				if(!SW_P3)
				_L13:
0098	3DA2	sz      PE3
0099	28A3	jmp     _L15
009A	0FFF	mov     a, FFH
009B	438B	addm    a, _main_2
009C	0FFF	mov     a, FFH
009D	538C	adcm    a, _main_2[1]
009E	7B8C	snz     _main_2[1].7
009F	284A	jmp     _L8
				_L22:
00A0	5F0B	clr     _main_2
00A1	5F0C	clr     _main_2[1]
00A2	284A	jmp     _L8
				;70				{
				;71					Index--;
				;72					if(Index<=0) Index=0;
				;73					break;
				;74				}
				;75				
				;76				if(Index>100) Relay=1;
				_L15:
00A3	0F64	mov     a, 64H
00A4	420B	sub     a, _main_2
00A5	0F00	mov     a, 0H
00A6	520C	sbc     a, _main_2[1]
00A7	3B8A	snz     SC
00A8	28AB	jmp     _L17
00A9	3222	set     PE4
00AA	2881	jmp     _L11
				;77				else Relay=0;
				_L17:
00AB	3622	clr     PE4
00AC	2881	jmp     _L11
00AD	28AD	jmp     $
				;78			}
				;79		}
				;80	}
				;81	void Delay100us(u16 del)						//延遲del*200指令週期
				;82	{	u16 i,j;									//@fSYS=8MH,延遲del*100us
				;83		for(i=0;i<del;i++)
				_Delay100us:
				_Delay100us:
0005	5F01	clr     rb
0006	5F02	clr     rc
				_L2:
0007	4701	mov     a, rb
0008	4205	sub     a, del[0]
0009	4702	mov     a, rc
000A	5206	sbc     a, del[1]
000B	3F0A	sz      CZ
000C	2818	jmp     _L1
000D	5F00	clr     ra
0014	5481	inc     rb
0015	3D0A	sz      Z
0016	5482	inc     rc
0017	2807	jmp     _L2
				_L1:
0018	0003	ret
				L0019:
0019	5F09	clr     del[4]
001A	5F0A	clr     del[5]
				L001B:
001B	7807	snz     del[2].0
001C	2821	jmp     L0021
001D	4705	mov     a, del[0]
001E	4389	addm    a, del[4]
001F	4706	mov     a, del[1]
0020	538A	adcm    a, del[5]
				L0021:
0021	340A	clr     C
0022	5A85	rlc     del[0]
0023	5A86	rlc     del[1]
0024	340A	clr     C
0025	5B88	rrc     del[3]
0026	5B87	rrc     del[2]
0027	4707	mov     a, del[2]
0028	4508	or      a, del[3]
0029	390A	snz     Z
002A	281B	jmp     L001B
002B	0003	ret
				;84			for(j=0;j<=25;j++) GCC_NOP();
				_L5:
000E	0000	nop
000F	5480	inc     ra
0010	4700	mov     a, ra
0011	0A1A	sub     a, 1AH
0012	390A	snz     Z
0013	280E	jmp     _L5
				;85	}
				data .SECTION 'DATA'
				__pepu DB DUP (?) ; __pepu
				__pe DB DUP (?) ; __pe
				__pec DB DUP (?) ; __pec
				__intc0 DB DUP (?) ; __intc0
				__intc2 DB DUP (?) ; __intc2
				__wdtc DB DUP (?) ; __wdtc
				__tm2c0 DB DUP (?) ; __tm2c0
				__tm2c1 DB DUP (?) ; __tm2c1
				__tm2al DB DUP (?) ; __tm2al
				__tm2ah DB DUP (?) ; __tm2ah
				__tm2rp DB DUP (?) ; __tm2rp
				__psc0 DB DUP (?) ; __psc0
				__tbc0 DB DUP (?) ; __tbc0
				ra DB DUP (?)
				rb DB DUP (?)
				rc DB DUP (?)
				rd DB DUP (?)
				re DB DUP (?)
				del DB 2 DUP (?) ; del
				_main_2 DB DUP (?)
				__pcs2 DB DUP (?) ; __pcs2
